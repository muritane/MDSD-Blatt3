modeltype blatt1 "strict" uses blatt1('http://www.example.org/blatt1');
modeltype palladio "strict" uses pcm('http://palladiosimulator.org/PalladioComponentModel/5.2');

transformation blatt12palladio(in srcModel : blatt1, out destModel : palladio);

main() {
	srcModel.objects()[blatt1::Assembly::System] -> map System2System();
	srcModel.objects()[blatt1::Repository::CompositeComponent] -> map CompositeComponent2CompositeComponent();
	//srcModel.objects()[blatt1::Assembly::AssemblyContext] -> map AssemblyContext2AssemblyContext();
	//srcModel.objects()[blatt1::Assembly::AssemblyConnector] -> map AssemblyConnector2AssemblyConnector();
}

mapping blatt1::Assembly::System :: System2System() : palladio::system::System {
	//self.encapsulatedAssemblyContext.map AssemblyContext2AssemblyContext();
}

mapping blatt1::Repository::CompositeComponent :: CompositeComponent2CompositeComponent() : palladio::repository::CompositeComponent{
	entityName := self.name;
	assemblyContexts__ComposedStructure := self.encapsulatedAssemblyContext.map AssemblyContext2AssemblyContext(result);
}

mapping blatt1::Assembly::AssemblyContext ::AssemblyContext2AssemblyContext(parent : palladio::repository::CompositeComponent) : palladio::core::composition::AssemblyContext {
	entityName := self.name;
	//parentStructure ???
	// ERROR: ImplementationComponentType does not conform to the type 'pcm::repository::RepositoryComponent'
	encapsulatedComponent__AssemblyContext := self.component.map Component2Component(self); //1-1 vs. 1-*?
	parentStructure__AssemblyContext := parent;
	//configParameterUsage???
}

//mapping blatt1::Assembly::AssemblyConnector :: AssemblyConnector2AssemblyConnector() : palladio::core::composition::AssemblyConnector {
//	requiringAssemblyContext_AssemblyConnector := self.requiredAssemblyContext.map AssemblyContext2AssemblyContext(); //1-1 vs. 1-*?
//	providingAssemblyContext_AssemblyConnector := self.providedAssemblyContext.map AssemblyContext2AssemblyContext();
//}

mapping blatt1::Repository::Component :: Component2Component() : palladio::repository::ImplementationComponentType {
	init {result.entityName := self.name;}
}

// ERROR: Result and out parameters of abstract types must be instantiated or assigned in the init-section
mapping blatt1::Repository::Component :: Component2Component(ac : blatt1::Assembly::AssemblyContext) : palladio::repository::ImplementationComponentType {
	init {self.map Component2Component();}
	//requiredRoles_InterfaceRequiringEntity := self.requiredInterface.map RequiredInterface2RequiredRole(self);
	requiredRoles_InterfaceRequiringEntity := ac.requiredRole.map RequiredRole2RequiredRole(result);
	providedRoles_InterfaceProvidingEntity := ac.providedRole.map ProvidedRole2ProvidedRole(result);
}

// ERROR: Result and out parameters of abstract types must be instantiated or assigned in the init-section
//mapping blatt1::Repository::Interface :: RequiredInterface2RequiredRole(blatt1::Repository::Component requiringComponent) : palladio::repository::RequiredRole {
//	entityName := self.name;
//	requiringEntity_RequiredRole := requiringComponent.map Component2Component(); //zyklus schlecht? in beispiel auch, also scheinbar ok
//}

mapping blatt1::Assembly::Role :: RequiredRole2RequiredRole(requiringComponent : palladio::repository::ImplementationComponentType) : palladio::repository::RequiredRole {
	init {result.entityName := self.name;}
	requiringEntity_RequiredRole := requiringComponent;
}

mapping blatt1::Assembly::Role :: ProvidedRole2ProvidedRole(providingComponent : palladio::repository::ImplementationComponentType) : palladio::repository::ProvidedRole {
	init {result.entityName := self.name;}
	providingEntity_ProvidedRole := providingComponent;
}